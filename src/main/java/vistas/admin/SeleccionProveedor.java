package vistas.admin;

import controladores.ProveedorControlador;
import jakarta.validation.ConstraintViolation;
import jakarta.validation.ConstraintViolationException;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import modelos.Cliente;
import modelos.Proveedor;

public class SeleccionProveedor extends javax.swing.JFrame {
    private ProveedorControlador controlador = new ProveedorControlador();

    public SeleccionProveedor() {
        initComponents();
        setLocationRelativeTo(null);
        personalizarTabla(tablaProveedores);
        forzarColorEncabezado(tablaProveedores);
        cargarTablaProveedores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProveedores = new javax.swing.JTable();
        btnSeleccionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SELECCIÓN DE PROVEEDOR");

        jPanel1.setBackground(new java.awt.Color(0, 43, 91));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Seleccione un proveedor de la tabla");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addContainerGap(588, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablaProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaProveedores);

        btnSeleccionar.setBackground(new java.awt.Color(0, 80, 157));
        btnSeleccionar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnSeleccionar.setForeground(new java.awt.Color(255, 255, 255));
        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSeleccionar)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 971, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnSeleccionar)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        int fila = tablaProveedores.getSelectedRow();
        if (fila >= 0) {
            String rfc = tablaProveedores.getValueAt(fila, 0).toString();
            Proveedor proveedor = null;
            try {
                proveedor = controlador.obtenerProveedor(rfc);
                new VentanaCompras(proveedor).setVisible(true);
                this.dispose();
            } catch (ConstraintViolationException e) {
                mostrarErroresValidacion(e);
            } catch (SQLException | IllegalArgumentException e) {
                JOptionPane.showMessageDialog(this, e.getMessage(),
                    "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona un proveedor de la tabla.");
        }
    }//GEN-LAST:event_btnSeleccionarActionPerformed
    
    private void cargarTablaProveedores() {
        try {
            List<Proveedor> proveedores = controlador.obtenerProveedores();
            DefaultTableModel modelo = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            
            modelo.setColumnIdentifiers(new Object[]{"RFC", "Razón Social",
            "Teléfono", "Email", "CP", "Colonia", "Ciudad", "Estado"});
            for (Proveedor p : proveedores) {
                modelo.addRow(new Object[]{
                    p.getRfc(),
                    p.getRazon_social(),
                    p.getTelefono(),
                    p.getEmail(),
                    p.getCodigo_postal(),
                    p.getColonia(),
                    p.getCiudad(),
                    p.getEstado()
                });
            }
            tablaProveedores.setModel(modelo);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                    "Error al cargar los clientes: " + e.getMessage(),
                    "ERROR", JOptionPane.ERROR_MESSAGE
            );
        }
    }
    
    private void personalizarTabla(JTable tabla) {
        tabla.setRowHeight(28);
        tabla.setShowGrid(false);
        tabla.setIntercellSpacing(new Dimension(0, 0));
        
        tabla.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        tabla.setForeground(new Color(30, 30, 30));
        tabla.setBackground(new Color(240, 240, 240));
        
        JTableHeader header = tabla.getTableHeader();
        header.setFont(new Font("Segoe UI", Font.BOLD, 15));
        header.setBackground(new Color(0, 43, 91));
        header.setForeground(Color.WHITE);
        header.setReorderingAllowed(false);
        
        tabla.setSelectionBackground(new Color(142, 197, 252));
        tabla.setSelectionForeground(Color.WHITE);
    }
    
    private void forzarColorEncabezado(JTable tabla) {
        JTableHeader header = tabla.getTableHeader();
        header.setDefaultRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {

                JLabel lbl = (JLabel) super.getTableCellRendererComponent(
                        table, value, isSelected, hasFocus, row, column);

                lbl.setBackground(new Color(0, 43, 91));
                lbl.setForeground(Color.WHITE);
                lbl.setFont(new Font("Segoe UI", Font.BOLD, 15));
                lbl.setHorizontalAlignment(SwingConstants.CENTER);
                lbl.setOpaque(true);
                return lbl;
            }
        });
    }
    
    private void mostrarErroresValidacion(ConstraintViolationException e) {
        StringBuilder errores = new StringBuilder();
        for (ConstraintViolation<?> v : e.getConstraintViolations()) {
            errores.append("- ").append(v.getMessage()).append("\n");
        }
        JOptionPane.showMessageDialog(this,
                errores.toString(),
                "ERRORES DE VALIDACIÓN",
                JOptionPane.WARNING_MESSAGE
        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaProveedores;
    // End of variables declaration//GEN-END:variables
}
